{"version":3,"sources":["components/ErrorView/index.tsx","reducer/reducer.tsx","context/state.tsx","actions/actions.tsx","components/InfoButton/index.tsx","components/Header/index.tsx","apis/Apis.tsx","components/ContentContainer/index.tsx","components/SearchBar/index.tsx","components/Footer/index.tsx","components/AudioPlayer/index.tsx","components/Profile/index.tsx","components/Sidebar/index.tsx","components/SearchResults/index.tsx","components/Song/index.tsx","components/SongList/index.tsx","components/SearchResultsContainer/index.tsx","components/App.tsx","index.tsx"],"names":["ErrorView","className","icon","faExclamationTriangle","stateReducer","state","action","type","totalArtists","payload","token","songs","artistDetails","currentSong","songIndex","togglePlayer","toggleSearchResults","toggleProfile","toggleSearchResultsView","toggleSidebar","displayNoTracksMessage","showErrorView","Error","StateContext","createContext","useStateContext","useContext","StateProvider","children","useReducer","searchTerm","dispatch","Provider","value","setCurrentSong","setSongIndex","toggleDisplayNoTracksMessage","toggleErrorView","InfoButton","faInfoCircle","onClick","actions","Header","href","target","rel","id","src","preview_url","getAuth","a","headers","axios","post","response","data","access_token","console","error","getArtist","artistName","auth","apiParams","apiItems","url","q","_","isEmpty","get","artists","items","log","getSongs","allTracks","tracks","tracksWithPreviews","filter","track","getArtistDetails","endPoint","getArtistDiscogs","artistId","results","toString","ContentContainer","props","useEffect","apis","Fragment","SearchBar","useState","currentSearch","changeCurrentSearch","InputGroup","FormControl","placeholder","aria-label","aria-describedby","onChange","e","searchValue","updateSearchInput","Append","Button","Footer","year","Date","getFullYear","AudioPlayer","player","document","getElementById","activeButton","setActiveButton","playerIssue","setPlayerIssue","setAttribute","album","images","alt","name","faStepBackward","role","buttonPressed","newIndex","prevSrc","previousSong","faPlay","play","faPause","pause","faStepForward","nextSrc","nextSong","Profile","profile","uri","Sidebar","SearchResults","map","artist","index","Song","songData","Row","as","Col","xs","xl","faPlayCircle","SongList","song","SearchResultsContainer","App","StrictMode","Container","fluid","md","lg","ReactDOM","render"],"mappings":"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","file":"static/js/main.321caaf0.chunk.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\n\nconst ErrorView = () => {\n    return (\n        <section className=\"error_view\">\n            <FontAwesomeIcon icon={faExclamationTriangle} />\n            <p>\n                <span className=\"opps\">Opps!<br /></span>\n                <span>Something went wrong.<br />Please try again.</span>\n            </p>\n\t\t</section>\n    );\n}\n\nexport default ErrorView;","import { IAction } from '../interfaces/';\n\nconst stateReducer = (state: any, action: IAction) => {\n    switch (action.type) {\n        case 'set_total_artists':\n            return { ...state, totalArtists: action.payload };\n        case 'set_token':\n            return { ...state, token: action.payload };\n        case 'set_songs':\n            return { ...state, songs: action.payload };\n        case 'set_artist_details':\n            return { ...state, artistDetails: action.payload };\n        case 'set_current_song':\n            return { ...state, currentSong: action.payload };\n        case 'set_song_index':\n            return { ...state, songIndex: action.payload };\n        case 'toggle_player':\n            return { ...state, togglePlayer: action.payload };\n        case 'toggle_search_results':\n            return { ...state, toggleSearchResults: action.payload };\n        case 'toggle_profile':\n            return { ...state, toggleProfile: action.payload };\n        case 'toggle_search_results_view':\n            return { ...state, toggleSearchResultsView: action.payload };\n        case 'toggle_sidebar':\n            return { ...state, toggleSidebar: action.payload };\n        case 'toggle_display_no_tracks_message':\n            return { ...state, displayNoTracksMessage: action.payload };\n        case 'toggle_error_view':\n            return { ...state, showErrorView: action.payload };\n        default:\n            throw new Error();\n    }\n};\n\nexport default stateReducer;","import React, { useContext, createContext, useReducer } from \"react\";\nimport stateReducer from '../reducer/reducer';\nimport { IState, IStateReducer } from '../interfaces/';\n\nconst StateContext = createContext<IStateReducer>({} as IStateReducer);\n\nconst useStateContext = () => useContext(StateContext);\n\nconst StateProvider = ({ children }: any) => {\n\n    const initialState: IState = {\n        searchTerm: '',\n        songs: [],\n        artistDetails: {},\n        currentSong: {},\n        totalArtists: [],\n        togglePlayer: false,\n        toggleSearchResults: false,\n        toggleProfile: false,\n        toggleSearchResultsView: false,\n        toggleSidebar: false,\n        songIndex: null,\n        displayNoTracksMessage: true,\n        showErrorView: false,\n        token: ''\n    }\n\n    const [state, dispatch] = useReducer(stateReducer, initialState);\n\n    return (\n        <StateContext.Provider value={{ state, dispatch }}>\n            { children }\n        </StateContext.Provider>\n    )\n};\n\nexport { StateProvider, useStateContext, StateContext };","\nexport const setToken = (payload: string) => {\n    return  {\n        type: 'set_token', \n        payload: payload\n    };\n}\n\nexport const setTotalArtists = (payload: Array<object>) => {\n    return  {\n        type: 'set_total_artists', \n        payload: payload\n    };\n}\n\nexport const setSongs = (payload: Array<object>) => {\n    return  {\n        type: 'set_songs', \n        payload: payload\n    };\n}\n\nexport const setCurrentSong = (payload: object) => {\n    return  {\n        type: 'set_current_song', \n        payload: payload\n    };\n}\n\nexport const setSongIndex = (payload: number) => {\n    return  {\n        type: 'set_song_index', \n        payload: payload\n    };\n}\n\n\nexport const setArtistDetails = (payload: object) => {\n    return  {\n        type: 'set_artist_details', \n        payload: payload\n    };\n}\n\nexport const toggleDisplayNoTracksMessage = (payload: boolean) => {\n    return  {\n        type: 'toggle_display_no_tracks_message', \n        payload: payload\n    };\n}\n\nexport const toggleSidebar = (payload: boolean) => {\n    return  {\n        type: 'toggle_sidebar', \n        payload: payload\n    };\n}\n\nexport const togglePlayer = (payload: boolean) => {\n    return  {\n        type: 'toggle_player', \n        payload: payload\n    };\n}\n\nexport const toggleProfile= (payload: boolean) => {\n    return  {\n        type: 'toggle_profile', \n        payload: payload\n    };\n}\n\nexport const toggleErrorView = (payload: boolean) => {\n    return  {\n        type: 'toggle_error_view', \n        payload: payload\n    };\n}\n\nexport const toggleSearchResultsView = (payload: boolean) => {\n    return  {\n        type: 'toggle_search_results_view', \n        payload: payload\n    };\n}\n\nexport const toggleSearchResults = (payload: boolean) => {\n    return  {\n        type: 'toggle_search_results', \n        payload: payload\n    };\n}","import React from 'react';\nimport { useStateContext } from '../../context/state';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons';\nimport * as actions from '../../actions/actions';\n\nconst InfoButton = () => {\n\tconst { dispatch } = useStateContext();\n\n    const toggleHandler = () => {\n        dispatch(actions.toggleSidebar(true));\n        dispatch(actions.toggleDisplayNoTracksMessage(false));\n        dispatch(actions.toggleProfile(true));\n    }\n\n    return (\n        <div className=\"info\">\n            <FontAwesomeIcon type=\"button\" icon={faInfoCircle} onClick={() => toggleHandler()} />\n\t\t</div>\n    );\n}\n\nexport default InfoButton;","import React from 'react';\nimport InfoButton from '../InfoButton/';\nimport { useStateContext } from '../../context/state';\n\nconst Header = () => {\n    const { state } = useStateContext();\n\n    const heading = 'Muzak';\n    const introMessage1 = 'Listen to available preview tracks from your favorite artists using ';\n    const introMessage2 = ' and artist information from ';\n    const spotify = 'Spotify';\n    const discogs = 'Discogs';\n\n    return <header>\n            <h1>{heading}</h1>\n            <p>\n                {introMessage1}\n                <a href=\"https://www.spotify.com\" target=\"_blank\" rel=\"noopener noreferrer\">{spotify}</a>\n                {introMessage2}\n                <a href=\"https://www.discogs.com/\" target=\"_blank\" rel=\"noopener noreferrer\">{discogs}</a>.\n            </p>\n            <InfoButton />\n            {/* Putting the audio tag here in order to persist outside of the sidebar */}\n            <audio id=\"music\" src={ state.currentSong?.preview_url } />\n        </header>\n}\n\nexport default Header;","import axios from 'axios';\nimport { CurrentSong } from '../interfaces';\nimport * as actions from '../actions/actions';\nimport { IState } from '../interfaces';\nimport _ from 'lodash';\n\nconst apiKeyDiscogs = process.env.REACT_APP_APIKEYDISCOGS;\nconst apiSecretSpotify = process.env.REACT_APP_APISECRETSPOTIFY;\n\n// Spotify APIs\nexport const getAuth = async (dispatch: Function) => {\n    const auth = 'Basic ' + apiSecretSpotify;\n\n    const headers = { \n        'Content-Type': 'application/x-www-form-urlencoded',\n        'Authorization': auth\n    };\n\n    const url = \"https://accounts.spotify.com/api/token\";\n    const body = 'grant_type=client_credentials';\n\n    try {\n        const response = await axios.post(url, body, { headers });\n        dispatch(actions.setToken(response.data.access_token));\n    } catch (error) {\n        dispatch(actions.toggleErrorView(true));\n        console.error(error);\n    }\n};\n\nexport const getArtist = async (artistName: String, state: IState, dispatch: Function) => {\n    const auth = 'Bearer ' + state.token;\n\n    const headers = { \n        'Content-Type': 'application/x-www-form-urlencoded',\n        'Authorization': auth\n    };\n\n\n    const apiItems = { \n        url: \"https://api.spotify.com/v1/search?\",\n        q: artistName,\n        type: \"artist\"\n    };\n\n    const apiParams = apiItems.url \n    + 'q=' \n    + apiItems.q\n    + '&type=' \n    + apiItems.type;\n\n    if(!_.isEmpty(state.token)) {\n        try {\n            const response = await axios.get(apiParams, { headers });\n            dispatch(actions.setTotalArtists(response.data.artists.items));\n        } catch (error) {\n            dispatch(actions.toggleErrorView(true));\n            console.error(error);\n        }\n    } else {\n        console.log('problem with token for search');\n    }\n};\n\nexport const getSongs = async (id: string, state: IState, dispatch: Function) => {\n    const auth = 'Bearer ' + state.token;\n\n    const headers = { \n        'Content-Type': 'application/x-www-form-urlencoded',\n        'Authorization': auth     \n    };\n\n    const url = 'https://api.spotify.com/v1/artists/';\n\n    const apiParams = url + id + '/top-tracks?market=US';\n\n    if(!_.isEmpty(state.token) && id !== 'none') {\n        try {\n            const response = await axios.get(apiParams, { headers });\n            const allTracks = response.data.tracks;\n\n            // need to only include tracks with preview_urls\n            const tracksWithPreviews = allTracks.filter((track: CurrentSong) => !_.isEmpty(track?.preview_url));\n\n            dispatch(actions.setSongs(tracksWithPreviews));\n        } catch (error) {\n            dispatch(actions.toggleErrorView(true));\n            console.error(error);\n        }\n    } else {\n        console.log('problem with token for songs');\n    }\n};\n\n// Discogs APIs\nconst getArtistDetails = async (id: string, dispatch: Function) => {\n    const url = \"https://api.discogs.com/artists/\";\n    const endPoint = url + id;\n\n    try {\n        const response = await axios.get(endPoint);\n        dispatch(actions.setArtistDetails(response.data));\n    } catch (error) {\n        dispatch(actions.toggleErrorView(true));\n        console.error(error);\n    }\n};\n\nexport const getArtistDiscogs = async (artistName: string, dispatch: Function) => {\n    const url = \"https://api.discogs.com/database/search?\";\n    const params = 'q=' + artistName + '&type=artist&token=' + apiKeyDiscogs;\n    const endPoint = url + params;\n\n    try {\n        const response = await axios.get(endPoint);\n        const artistId = response?.data.results[0].id;\n        getArtistDetails(artistId.toString(), dispatch);\n    } catch (error) {\n        dispatch(actions.toggleErrorView(true));\n        console.error(error);\n    }\n};\n","import React, { useEffect } from 'react';\nimport ErrorView from '../ErrorView';\nimport Header from '../Header';\nimport { useStateContext } from '../../context/state';\nimport * as apis from '../../apis/Apis';\n\nconst ContentContainer = (props: any) => {\n    const { children } = props;\n    const { state, dispatch } = useStateContext();\n\n    useEffect(() => {\n        apis.getAuth(dispatch);\n    }, [dispatch])\n\n    return (\n        <React.Fragment>\n            <Header />\n            { children }\n            { state.toggleErrorView && <ErrorView />}\n        </React.Fragment>\n    )\n}\n\nexport default ContentContainer;","import React, { useState } from 'react';\nimport { useStateContext } from '../../context/state';\nimport { Button, FormControl, InputGroup  } from 'react-bootstrap';\nimport * as actions from '../../actions/actions';\nimport * as apis from '../../apis/Apis';\n\nconst SearchBar = () => {\n    const { state, dispatch } = useStateContext();\n\n    const [currentSearch, changeCurrentSearch] = useState<String>('');\n    \n    const updateSearchInput = (e: any) => {\n        dispatch(actions.toggleErrorView(false));\n        const searchValue = e.target.value;\n        changeCurrentSearch(searchValue);\n    }\n\n    const submitSearch = () => {\n        state.displayNoTracksMessage && dispatch(actions.toggleDisplayNoTracksMessage(false));\n        apis.getArtist(currentSearch, state, dispatch);\n        dispatch(actions.toggleSearchResultsView(true));\n    }\n\n    return (\n        <InputGroup id=\"search_form\">\n            <FormControl\n                placeholder=\"Search for something?!\"\n                aria-label=\"SearchBar\"\n                aria-describedby=\"search\"\n                onChange={(e) => updateSearchInput(e)}\n            />\n            <InputGroup.Append>\n                <Button type=\"submit\" id=\"submit\" onClick={submitSearch}>Search</Button>\n            </InputGroup.Append>\n        </InputGroup>\n    );\n}\n\nexport default SearchBar;","import React from 'react';\n\nconst Footer = () => {\n    const copyrightName = 'ME Innovation';\n    const newDate = new Date()\n\tconst year = newDate.getFullYear();\n\n    return (\n        <footer>\n            <small>\n                &copy;{year} \n                <a href=\"http://www.meinnovation.net\" target=\"_blank\" rel=\"noopener noreferrer\">{copyrightName}</a>\n            </small>\n        </footer>\n    );\n}\n\nexport default Footer;","import React, { useEffect, useState } from 'react';\nimport { useStateContext } from '../../context/state';\nimport * as actions from '../../actions/actions';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPause, faPlay, faStepBackward, faStepForward } from '@fortawesome/free-solid-svg-icons';\n\nconst AudioPlayer = () => {\n    const { state, dispatch } = useStateContext();\n\n    const player = document.getElementById('music');\n\n    const [activeButton, setActiveButton] = useState<string>('pause');\n    const [playerIssue, setPlayerIssue] = useState<boolean>(false);\n\n    useEffect(() => {\n        player?.setAttribute('src', (state.currentSong?.preview_url as string));\n    }, [player, state.currentSong]);\n\n    const actionMessage = 'Back to results';\n\n    const replaySong = (buttonPressed: string) => {\n        setActiveButton(buttonPressed);\n        player ? setPlayerIssue(false) : setPlayerIssue(true);\n        (player as HTMLAudioElement)?.play();\n    }\n\n    const pauseSong = (buttonPressed: string) => {\n        setActiveButton(buttonPressed);\n        (player as HTMLAudioElement)?.pause();\n    }\n\n    const previousSong = (buttonPressed: string) => {\n        setActiveButton(buttonPressed);\n        let currentSongIndex = state.songIndex!;\n        const newIndex = currentSongIndex - 1;\n        const prevSrc = state.songs && state.songs[newIndex];\n        dispatch(actions.setCurrentSong(prevSrc));\n        dispatch(actions.setSongIndex(newIndex));\n    }\n\n    const nextSong = (buttonPressed: string) => {\n        setActiveButton(buttonPressed);\n        let currentSongIndex = state.songIndex!;\n        const newIndex = currentSongIndex + 1;\n        const nextSrc = state.songs && state.songs[newIndex];\n        dispatch(actions.setCurrentSong(nextSrc));\n        dispatch(actions.setSongIndex(newIndex));\n    }\n    \n    const hidePlayer = () => {\n        dispatch(actions.toggleSidebar(false));\n        dispatch(actions.togglePlayer(false));\n    }\n\n    return (\n        <div className=\"audioPlayer_container\">\n            <div id=\"audioPlayer\">\n                <img className=\"album_art\" src={ state.currentSong?.album?.images[0]?.url } alt=\"\" />\n                <div id=\"song_name_display\">\n                    {\n                        playerIssue ? 'Something went wrong. Please try again.' :\n                        (<React.Fragment>\n                            <p className='artist_name'>{ state.currentSong?.name }</p>\n                            <p className='album'>{ state.currentSong?.album?.name }</p>\n                        </React.Fragment>)\n                    }\n                </div>\n                <div id=\"controls_wrap\">\n                    <div id=\"audio_controls\">\n                        <FontAwesomeIcon \n                            icon={faStepBackward} \n                            id=\"previous_song\" \n                            role=\"button\"\n                            className={activeButton === 'previous_song' ? 'active_player_button' : ''} \n                            onClick={() => previousSong('previous_song')} />\n                        <FontAwesomeIcon \n                            icon={faPlay} \n                            id=\"play\" \n                            role=\"button\"\n                            className={activeButton === 'play' ? 'active_player_button' : ''} \n                            onClick={() => replaySong('play')} />\n                        <FontAwesomeIcon \n                            icon={faPause} \n                            id=\"pause\" \n                            role=\"button\"\n                            className={activeButton === 'pause' ? 'active_player_button' : ''} \n                            onClick={() => pauseSong('pause')} />\n                        <FontAwesomeIcon \n                            icon={faStepForward} \n                            id=\"next_song\" \n                            role=\"button\"\n                            className={activeButton === 'next_song' ? 'active_player_button' : ''} \n                            onClick={() => nextSong('next_song')} />\n                    </div>\n                </div>\n                <button id=\"mobile_back\" onClick={hidePlayer}>\n                    <p>{actionMessage}</p>\n                </button>\n            </div>\n        </div>\n    );\n}\n\nexport default AudioPlayer;\n","import React from 'react';\nimport { useStateContext } from '../../context/state';\nimport { Button } from 'react-bootstrap';\nimport _ from 'lodash';\nimport * as actions from '../../actions/actions';\n\nconst Profile = () => {\n\tconst { state, dispatch } = useStateContext();\n\n\tconst toggleHandler = () => {\n\t\tdispatch(actions.toggleProfile(false));\n\t}\n\n    return (\n\t\t<div id=\"artist_info\">\n\t\t\t<div className=\"close\">\n\t\t\t\t<Button onClick={() => toggleHandler()}>X</Button>\n\t\t\t</div>\n\t\t\t<div className=\"content\">\n\t\t\t\t{\n\t\t\t\t\t!_.isEmpty(state.artistDetails) ? (<React.Fragment>\n\t\t\t\t\t\t<h3>{ state.artistDetails?.name }</h3>\n\t\t\t\t\t\t<p>{ state.artistDetails?.profile}</p>\n\t\t\t\t\t\t<a href={state.artistDetails?.uri} target=\"_blank\" rel=\"noreferrer\">\n\t\t\t\t\t\t\t{ 'Check out the rest of the ' + state.artistDetails?.name + ' profile from Discogs' }\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t) : 'Nothing to see here until you search for something'\n\t\t\t\t}\n\t\t\t</div>\n\t\t</div>\n    );\n}\n\nexport default Profile;","import React from 'react';\nimport { useStateContext } from '../../context/state';\nimport AudioPlayer from '../AudioPlayer/';\nimport Profile from '../Profile/';\nimport { Button } from 'react-bootstrap';\nimport * as actions from '../../actions/actions';\n\nconst Sidebar = () => {\n    const {state, dispatch} = useStateContext();\n\n    const closeNoTrackMessageHandler = () => {\n\t\tdispatch(actions.toggleDisplayNoTracksMessage(false));\n\t}\n\n    return (\n        <aside id=\"album_player_section\" className={state.toggleSidebar ? '' : 'hidden'}>\n            { \n                state.currentSong?.preview_url ? state.togglePlayer && <AudioPlayer /> :\n                <div className={\"no_tracks\" + (!state.displayNoTracksMessage ? ' hidden' : '')}>\n                    <div className=\"close\">\n                        <Button onClick={() => closeNoTrackMessageHandler()}>X</Button>\n                    </div>\n                    Sorry can't find preview tracks available for this artist right now.\n                    Please try again, check out their profile or select a new artist.\n                </div>\n            }\n            { state.toggleProfile && <Profile /> }\n        </aside>\n    );\n}\n\nexport default Sidebar;","import React from 'react';\nimport { useStateContext } from '../../context/state';\nimport _ from 'lodash';\nimport * as actions from '../../actions/actions';\nimport * as apis from '../../apis/Apis';\n\nconst SearchResults = () => {\n    const { state, dispatch } = useStateContext();\n\n    const submitSearch = (artistName: string, artistId: string) => {\n        // clearing previous selections\n        dispatch(actions.togglePlayer(false));\n\n        apis.getSongs(artistId, state, dispatch);\n        apis.getArtistDiscogs(artistName, dispatch);\n\n        !_.isEmpty(state.songs) && dispatch(actions.toggleSearchResults(true));\n        dispatch(actions.toggleSearchResultsView(false));\n    }\n\n    return (\n\t\t<div id=\"search_results\">\n            <h2>Search Results</h2>\n            <p>Please choose an option from the following:</p>\n            <ul>\n                {\n                    !_.isEmpty(state.totalArtists) ? state.totalArtists?.map((artist?: any, index?: number) => {\n                        return <li key={index} className=\"result\" onClick={() => submitSearch(artist?.name, artist?.id)}>\n                            { artist?.name }\n                        </li>\n                    }) : 'Sorry there was a problem. Please try again'\n                }\n            </ul>\n\t\t</div>\n    );\n}\n\nexport default SearchResults;","import React from 'react';\nimport { useStateContext } from '../../context/state';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlayCircle } from '@fortawesome/free-solid-svg-icons';\nimport { Row, Col } from 'react-bootstrap';\nimport * as actions from '../../actions/actions';\n\nconst Song = (props: any) => {\n    const { \n        songData,\n        index \n    } = props;\n\n    const { dispatch } = useStateContext();\n\n    const playSongs = () => {\n        // sends the songData to the AudioPlayer component to play\n        dispatch(actions.setCurrentSong(songData));\n        dispatch(actions.toggleSidebar(true));\n        dispatch(actions.setSongIndex(index));\n        dispatch(actions.toggleDisplayNoTracksMessage(false));\n        dispatch(actions.togglePlayer(true));\n    }\n\n    return (\n        <Row as={'li'} className=\"tracks\">\n            <Col xs={8} xl={11} >{songData?.name}</Col>\n            <Col className=\"d-flex flex-row-reverse\">\n                <button onClick={playSongs} id=\"play_buttons\">\n                    <FontAwesomeIcon icon={faPlayCircle} />\n                </button>\n            </Col>\n        </Row>\n    );\n}\n\nexport default Song;","import React from 'react';\nimport Song from '../Song/';\n\nconst SongList = (props: any) => {\n    const { songs } = props;\n\n    const heading = 'Top Songs';\n\n    return (\n        <div id=\"song_list\">\n            <React.Fragment>\n                <h2>{heading}</h2>\n                <ul>\n                    {\n                        songs?.map((song: any, index: number) => {\n                            return <Song key={index} songData={song} index={index}/>\n                        })\n                    }\n                </ul>\n            </React.Fragment>\n        </div>\n    );\n}\n\nexport default SongList;","import React from 'react';\nimport SearchResults from '../SearchResults/';\nimport SongList from '../SongList';\nimport { useStateContext } from '../../context/state';\nimport _ from 'lodash';\n\nconst SearchResultsContainer = () => {\n    const { state } = useStateContext();\n\n    return (\n        <section className=\"searchContainer\">\n            {\n                state.toggleSearchResultsView && <SearchResults />\n            }\n            {\n                !_.isEmpty(state.songs) && <SongList songs={state.songs ? state.songs : []} />\n            }\n\t\t</section>\n    );\n}\n\nexport default SearchResultsContainer;","import React from 'react';\nimport ContentContainer from './ContentContainer';\nimport SearchBar from './SearchBar/';\nimport Footer from './Footer/';\nimport Sidebar from './Sidebar/';\nimport SearchResultsContainer from \"./SearchResultsContainer/\";\nimport { StateProvider } from '../context/state';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nconst App = () => {\n    return (\n        <React.StrictMode>\n            <StateProvider>\n                <Container fluid>\n                    <Row id=\"content_wrap\">\n                        <Col xs={12} md={7} lg={7} xl={7}>\n                            <ContentContainer>\n                                <SearchBar />\n                                <SearchResultsContainer />\n                            </ContentContainer>\n                        </Col>\n                        <Col className=\"sidebar_container\" xs={12} md={5} lg={5} xl={5}>\n                            <Sidebar />\n                        </Col>\n                        <Footer />\n                    </Row>\n                </Container>\n            </StateProvider>\n        </React.StrictMode>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./scss/style.scss\";\n\nReactDOM.render(\n\t<App />, \n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}